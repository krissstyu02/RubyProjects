class StudentShort
{
    -last_name: String
    -initials: String
    -id: Integer
    -git: String
    -contact: String
--
    +initialize(Student)
    +{static}from_str(id,str)
    +to_s(): String
    +last_name_and_initials(): String
    +contact?(): Boolean
    +git?(): Boolean
    +validate(): Boolean
.. Геттеры ..
    +last_name(): String
    +initials(): String
    +id(): Integer
    +git(): String
    +contact(): String
}

class Student extends StudentShort {
    -first_name: String
    -paternal_name: String
    -phone: String
    -telegram: String
    -email: String
--
    +{static}valid_name?(String): Boolean
    +{static}valid_phone?(String): Boolean
    +{static}valid_account?(String): Boolean
    +{static}valid_email?(String): Boolean
    +initialize(Str, Str, Str, Int, Str, Str, Str, Str)
    +{static}init_from_json(String)
    +{static}from_hash(String)
    +set_contacts(String, String, String)
    +to_s(): String
    +last_name_and_initials(): String
    +short_info(): String
    .. Геттеры ..
    +phone(): String
    +telegram(): String
    +email(): String
    +first_name(): String
    +paternal_name(): String
    -contact(): String
    .. Сеттеры ..
    +id=(Integer)
    +git=(String)
    +phone=(String)
    +telegram=(String)
    +email=(String)
    +last_name=(String)
    +first_name=(String)
    +paternal_name=(String)
}

abstract class DataList
{
    -selected_objects: Array
    -objects_list: Array
--
    +initialize(Array)
    +select(number): Array
    +clear_select(): Array
    +get_selected(Array): Array
    #get_names()
    +get_data(): Array
    #table_fields(Object): Array
    ..Геттеры..
    -selected_objects: Array
    -objects_list: Array
    ..Сеттеры..
    -selected_objects=(Array)
    +objects_list=(Array)

}
class DataTable
{
    -table: Array
    -rows_count: Integer
    -cols_count: Integer
--
    +initialize(Array)
    +get_elem(Integer,Integer): String
    +to_s(): String
    ..Геттеры..
    -table(): Array
    +rows_count(): Integer
    +cols_count(): Integer
    ..Сеттеры..
    -table=(Array)
    -rows_count=(Integer)
    -cols_count=(Integer)
}
class DataListStudentShort extends DataList{
    +initialize(Array)
     +get_names(): Array
     +get_data(): DataTable
    #table_fields(Object): Array
}
 abstract class StudentListBase {
     -students: Array
     -cur_id: Integer
     -data_type: data_type
     --
     +initialize()
     +read_from_file(String)
     +write_to_file(String)
     +student_by_id(Integer): Student
     +student_by_name(String): Array
     +get_k_n_student_short_list(Integer, Integer, DataList):DataList
     +sorted(): Array
      +add_student(Student)
     +replace_student(Integer, Student)
     +remove_student(Integer)
     +student_count(): Integer
     -update_cur_id()
     .. Геттеры ..
     #students(): Array
     #cur_id(): Integer
     -data_type():data_type
     .. Сеттеры ..
     #students=(Array)
     #cur_id=(Integer)
     -data_type: StudentListStrategy
 }

class StudentListStrategy {
    --
    #str_to_list(String)
    #list_to_str(Array)
}

class StudentListJSON extends StudentListStrategy {
    --
    +str_to_list(String): Array
    +list_to_str(Array): String
}

class StudentListYAML extends StudentListStrategy {
    --
    +str_to_list(String): Array
    +list_to_str(Array): String
}

 class StudentsListTxt extends StudentListStrategy {
     --
     -transform_to_hashes(String): Array
     -transform_to_strings(Array): String
     +str_to_list(String): Array
     +list_to_str(Array): String
     }
class DBConnection {
     -instance: DBConnection
     -client: Mysql2::Client
     --
     +{static}instance(): DBConnection
     -initialize()
     +prepare(Sql): Mysql2::::Result
     +query(Sql): Mysql2::::Result
     +last_id : Mysql2::::Result
 }
class StudentList_db_Adapter {
     -client: DBConnection
     --
     +initialize()
     +student_by_id(Integer): Student
     +get_k_n_student_short_list(Integer, Integer): DataList
     +add_student(Student)
     +replace_student(Integer, Student)
     +remove_student(Integer)
     +student_count(): Integer
     -student_fields(): Student
     .. Геттеры ..
     -students(): DBConnection
     .. Сеттеры ..
     -students=(): DBConnection
 }

class StudentList {
-data_adapter
     +student_by_id(Integer): Student
     +get_k_n_student_short_list(Integer, Integer): DataList
     +add_student(Student)
     +replace_student(Integer, Student)
     +remove_student(Integer)
     +student_count(): Integer
}

class StudentListFileAdapter {
-file: StudentListBase
-file_path: String
     +initialize()
     +student_by_id(Integer): Student
     +get_k_n_student_short_list(Integer, Integer): DataList
     +add_student(Student)
     +replace_student(Integer, Student)
     +remove_student(Integer)
     +student_count(): Integer
}

DataList ..> DataTable
StudentListBase *-- StudentListStrategy
DataListStudentShort o-- StudentShort
StudentList_db_Adapter o-- DBConnection

StudentList *-- StudentList_db_Adapter
StudentListFileAdapter o-- StudentListBase
StudentList *-- StudentListFileAdapter
StudentListBase ..> DataListStudentShort